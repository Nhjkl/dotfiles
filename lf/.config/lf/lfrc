# Basic vars
set shell bash
set shellopts '-eu'
set ifs "\n"
set scrolloff 10
set icons
set period 1
set hiddenfiles ".*:*.aux:*.log:*.bbl:*.bcf:*.blg:*.run.xml"
set ratios 1:2:3
set previewer ~/.config/lf/preview
set cleaner ~/.config/lf/cleaner

# Vars that depend on environmental variables
# $lf -remote "send $id set previewer ${XDG_CONFIG_HOME:-$HOME/.config}/lf/scope"
$lf -remote "send $id set previewer ${XDG_CONFIG_HOME:-$HOME/.config}/lf/preview"

# cmds/functions
cmd open ${{
  case $(file --mime-type "$([ "$(uname)" == "Darwin" ] && greadlink -f $f || readlink -f $f)" -b) in
    image/vnd.djvu|application/pdf|application/octet-stream|application/postscript) setsid -f zathura $fx >/dev/null 2>&1 ;;
    text/*) $EDITOR $fx;;
    image/x-xcf) setsid -f gimp $f >/dev/null 2>&1 ;;
    image/svg+xml) display -- $f ;;
    image/*) rotdir $f | grep -i "\.\(png\|jpg\|jpeg\|gif\|webp\|tif\|ico\)\(_large\)*$" | setsid -f sxiv -aio 2>/dev/null | lf-select & ;;
    audio/*) mpv --audio-display=no $f ;;
    video/*) setsid -f mpv $f -quiet >/dev/null 2>&1 ;;
    application/pdf|application/vnd*|application/epub*) setsid -f zathura $fx >/dev/null 2>&1 ;;
    application/pgp-encrypted) $EDITOR $fx ;;
    *) for f in $fx; do setsid -f $OPENER $f >/dev/null 2>&1; done;;
  esac
}}

cmd mkdir $mkdir -p "$(echo $* | tr ' ' '\ ')"

cmd extract ${{
  clear; tput cup $(($(tput lines)/3)); tput bold
  set -f
  printf "%s\n\t" "$fx"
  printf "extract?[y/N]"
  read ans
  [ $ans = "y" ] && aunpack $fx
}}

cmd delete ${{
  clear; tput cup $(($(tput lines)/3)); tput bold
  set -f
  printf "%s\n\t" "$fx"
  printf "delete?[y/N]"
  read ans
  [ $ans = "y" ] && rm -rf -- $fx
}}

cmd moveto ${{
  clear; tput cup $(($(tput lines)/3)); tput bold
  set -f
  clear; echo "Move to where?"
  dest="$(sed -e 's/\s*#.*//' -e '/^$/d' -e 's/^\S*\s*//' ${XDG_CONFIG_HOME:-$HOME/.config}/lf/bm-dirs | fzf | sed 's|~|$HOME|')" &&
  for x in $fx; do
    eval mv -iv \"$x\" \"$dest\"
  done &&
  notify-send "ðŸšš File(s) moved." "File(s) moved to $dest."
}}

cmd copyto ${{
  clear; tput cup $(($(tput lines)/3)); tput bold
  set -f
  clear; echo "Copy to where?"
  dest="$(sed -e 's/\s*#.*//' -e '/^$/d' -e 's/^\S*\s*//' ${XDG_CONFIG_HOME:-$HOME/.config}/lf/bm-dirs | fzf | sed 's|~|$HOME|')" &&
  for x in $fx; do
    eval cp -ivr \"$x\" \"$dest\"
  done &&
  notify-send "ðŸ“‹ File(s) copied." "File(s) copies to $dest."
}}

cmd setbg "$1"
cmd bulkrename $vidir

# Bindings
map <c-f> $lf -remote "send $id select '$(fzf)'"
# map J $lf -remote "send $id cd $(sed -e 's/\s*#.*//' -e '/^$/d' -e 's/^\S*\s*//' ${XDG_CONFIG_HOME:-$HOME/.config}/lf/bm-dirs | fzf)"
map D delete
map E extract # è§£åŽ‹
map C copyto
map M moveto
map <c-n> push :mkdir<space>
map <c-r> reload
map <enter> open
map x $$f
map X !$f

map gh cd ~
map gw cd ~/.local/work/
map gr cd ~/.local/learn/
map gb cd ~/.local/bin/
map gs cd ~/.local/share/
map gc cd ~/.config/
map gd cd ~/Downloads/

# yay -S perl-file-mimeinfo
map o &mimeopen $f
map O $mimeopen --ask $f

map r rename # at the very end
map B bulkrename
map b $setbg $f

map <c-j> half-down
map <c-k> half-up

map S $setsid -f $TERMINAL >/dev/null 2>&1

# map <enter> shell
# map V push :!nvim<space>
# map c push A<c-u> # new rename
# map I push A<c-a> # at the very beginning
# map i push A<a-b><a-b><a-f> # before extention
# map a push A<a-b> # after extention
# map <c-s> set hidden!
# map <c-e> down
# map <c-y> up
